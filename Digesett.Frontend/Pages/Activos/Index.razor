@page "/activos/index"
@using Digesett.Shared.Models
@using System.Text.Json
@inject IJSRuntime JS
@inject HttpClient httpClient
@implements IAsyncDisposable

<h3>Control de Activos Fijos</h3>
<buton class="btn btn-primary mb-3">Crear Activo</buton>


@if(activos is null)
{
    <p>loading...</p>
}
else
{
    <table class="table table-bordered table-striped shadow" id="tableActivos">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre del  Activo</th>
                <th>Categoria</th>
                <th>Status</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in activos)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Category</td>
                    <td>@item.Active</td>
                    <td>
                        <a href="/contacts/update/@item.Id" class="me-2" style="text-decoration:none;" tabindex="0" data-toggle="tooltip" title="Editar Usuario">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="black" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.5.5 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11z" />
                            </svg>
                        </a>
                        <a href="/contacts/delete/@item.Id" tabindex="0" data-toggle="tooltip" title="Eliminar Usuario">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="black" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                            </svg>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    public List<ActivoFijo>? activos { get; set; }

    protected override async Task OnInitializedAsync()
    {
        activos = await LoadData();
        await JS.InvokeAsync<object>("DataTableLoad", "#tableActivos");
    }
    
    private async Task<List<ActivoFijo>> LoadData()
    {
        using (httpClient = new HttpClient())
        {
            var url = $"http://localhost:5002/api/Activo";
            var respuesta = await httpClient.GetAsync(url);
            var rptString = await respuesta.Content.ReadAsStringAsync();
            var lista = JsonSerializer.Deserialize<List<ActivoFijo>>(rptString, new JsonSerializerOptions()
            {
                PropertyNameCaseInsensitive = true
            });
            if (lista is not null)
            {
                return lista;
            }
            else
            {
                List<ActivoFijo> listaDefault = new();
                return listaDefault;
            }
        }    
    }


    public async ValueTask DisposeAsync()
    {
        await JS.InvokeAsync<object>("DataTableUnload", "#tableActivos");
    }
}
