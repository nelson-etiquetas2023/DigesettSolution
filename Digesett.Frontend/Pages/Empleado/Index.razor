@page "/empleado/index"
@using Digesett.Shared.Models
@using System.Threading.Tasks
@inject IJSRuntime JS
@inject IEmployeeService emploservices
@inject IServiceCommon ServiceCommon
@implements IAsyncDisposable


<div class="row mb-3">
    <div class="col d-flex mb-3">
        <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" fill="currentColor" class="bi bi-person-bounding-box me-2" viewBox="0 0 16 16">
            <path d="M1.5 1a.5.5 0 0 0-.5.5v3a.5.5 0 0 1-1 0v-3A1.5 1.5 0 0 1 1.5 0h3a.5.5 0 0 1 0 1zM11 .5a.5.5 0 0 1 .5-.5h3A1.5 1.5 0 0 1 16 1.5v3a.5.5 0 0 1-1 0v-3a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 1-.5-.5M.5 11a.5.5 0 0 1 .5.5v3a.5.5 0 0 0 .5.5h3a.5.5 0 0 1 0 1h-3A1.5 1.5 0 0 1 0 14.5v-3a.5.5 0 0 1 .5-.5m15 0a.5.5 0 0 1 .5.5v3a1.5 1.5 0 0 1-1.5 1.5h-3a.5.5 0 0 1 0-1h3a.5.5 0 0 0 .5-.5v-3a.5.5 0 0 1 .5-.5" />
            <path d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm8-9a3 3 0 1 1-6 0 3 3 0 0 1 6 0" />
        </svg>
        <h1 class="fw-bold mb-2 bg-light">DATA EMPLEADOS - SISTEMA DE NOMINA DIGESETT</h1>

    </div>
</div>

<nav class="navbar navbar-light bg-light mb-3 d-flex justify-content-start">
    <button class="btn btn-primary shadow me-2" @onclick="TareasBioAdmin"><i class="bi bi-file-earmark-spreadsheet me-2"></i>Verificar Status</button>
    <button class="btn btn-primary me-2 shadow" @onclick="CheckEmployeeNew"><i class="bi bi-file-earmark-spreadsheet me-2"></i>Periodos Vencidos</button>
    <button class="btn btn-primary me-2 shadow" @onclick="VerificarEmpleadoNewBioAdmin"><i class="bi bi-file-earmark-spreadsheet me-2"></i>Empleados Nuevos</button>
    <button class="btn btn-primary me-2 shadow" @onclick="EmpleadosCancelados"><i class="bi bi-file-earmark-spreadsheet me-2"></i>Empleados Cancelados</button>
    <button class="btn btn-dark me-2 shadow"><i class="bi bi-file-earmark-spreadsheet me-2"></i>Exportar CVS</button>
    <button class="btn btn-success me-2 shadow"><i class="bi bi-file-earmark-excel-fill me-2"></i>Exportar Excel</button>
    <button class="btn btn-danger me-2 shadow"><i class="bi bi-file-pdf-fill me-2"></i>Exportar Pdf</button>
</nav>


<body onbeforeunload="() => $('#tableEmployee').DataTable().destroy();">
    @if (empleados == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <table class="table table-bordered table-striped table-sm shadow" id="tableEmployee">
            <thead>
                <tr>
                    <th>Cod Empleado</th>
                    <th>Cedula</th>
                    <th>Nombre del Empleado</th>
                    <th>Departamento</th>
                    <th>Cargo</th>
                    <th>Status</th>
                    <th>Fuera de Nomina</th>
                    <th>Fecha Desde</th>
                    <th>Fecha Hasta</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in empleados)
                {
                    <tr>
                        <td>@item.cod_empleado</td>
                        <td>@item.cedula</td>
                        <td>@item.nombre_empleado</td>
                        <td>@item.departamento</td>
                        <td>@item.cargo</td>
                        <td>@item.status</td>
                        <td>@item.FueraNomina</td>
                        <td>@(item.FueraNomina ? item.ExceptionDateStart.ToShortDateString():"")</td>
                        <td>@(item.FueraNomina ? item.ExceptionDateEnd.ToShortDateString() : "")</td>


                        <td>
                            <a href="/usuario/update/@item.cod_empleado" class="me-2" style="text-decoration:none;" tabindex="0" data-toggle="tooltip" title="Editar Usuario">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="black" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                    <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.5.5 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11z" />
                                </svg>
                            </a>
                            <a href="/usuario/delete/@item.cod_empleado" tabindex="0" data-toggle="tooltip" title="Eliminar Usuario">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="black" class="bi bi-trash" viewBox="0 0 16 16">
                                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                    <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                                </svg>
                            </a>
                        </td>

                    </tr>
                }
            </tbody>
        </table>
        <div id="listaexception"></div>
    }
</body>




@code {
    public static List<Employee>? empleados;
    public List<Employee> ListaCancel { get; set; } = null!;


    public async Task EmpleadosCancelados()
    {
        await ServiceCommon.VerifyEmployeeCanceled(empleados!);
    }


    public void CheckEmployeeNew()
    {
        // await emploservices.CheckEmployeeNew(empleados);
    }

    public async Task VerificarEmpleadoNewBioAdmin() 
    {
        await emploservices.VerificarEmployeeNewBioAdmin(empleados!);
    } 

    public async Task TareasBioAdmin()
    {
        //Boton de actualizacion del Bioadmin
        await ActualizarStatusNomina();
        await VerificarPeriodosVencidos();  
    }

    public async Task ActualizarStatusNomina()
    {
        await emploservices.ActualizarStatusNomina(empleados!);
    }

    public async Task VerificarPeriodosVencidos()
    {
        await emploservices.VerificarPeriodosVencidos();
        
    }

    
    public void ActualizarPeriodos(List<Employee> lista)
    {
       
    }




    protected override async Task OnInitializedAsync()
    {
        empleados = await LoadData();
        await JS.InvokeAsync<object>("DataTableLoad", "#tableEmployee");
    }

    public async ValueTask DisposeAsync()
    {
        await JS.InvokeAsync<object>("DataTableUnload", "#tableEmployee");
    }

    private async Task<List<Employee>> LoadData() => 
    empleados = await emploservices.GetEmployees();
}
